'use client'

import React, { useState, useEffect } from 'react'
import Link from 'next/link'
import { useRouter } from 'next/navigation'
import UserLayout from '../../components/UserLayout'
import apiService from '../../utils/constructionApiService'

export default function SitesDashboard() {
  const [isLoggedIn, setIsLoggedIn] = useState(true)
  const [user, setUser] = useState<any>({ name: 'Site Manager', role: 'ADMIN' })
  const [sites, setSites] = useState<any[]>([
    {
      id: 1,
      name: 'Downtown Office Complex - Site A',
      project: 'Downtown Office Complex',
      location: 'Downtown District, New York',
      status: 'ACTIVE',
      supervisor: 'John Smith',
      crewSize: 12,
      startDate: '2025-01-15',
      endDate: '2025-09-30',
      progress: 75,
      safetyRating: 92,
      qualityRating: 88,
      issues: 3,
      safetyIncidents: 1,
      lastInspection: '2025-03-17',
      nextInspection: '2025-03-24'
    },
    {
      id: 2,
      name: 'Residential Apartment Block B - Site B',
      project: 'Residential Apartment Block B',
      location: 'Suburban Area, Chicago',
      status: 'ACTIVE',
      supervisor: 'Sarah Johnson',
      crewSize: 18,
      startDate: '2025-02-10',
      endDate: '2025-10-15',
      progress: 45,
      safetyRating: 87,
      qualityRating: 82,
      issues: 7,
      safetyIncidents: 2,
      lastInspection: '2025-03-16',
      nextInspection: '2025-03-23'
    },
    {
      id: 3,
      name: 'Industrial Warehouse - Site C',
      project: 'Industrial Warehouse',
      location: 'River Crossing, Houston',
      status: 'COMPLETED',
      supervisor: 'Mike Chen',
      crewSize: 24,
      startDate: '2024-11-01',
      endDate: '2025-03-30',
      progress: 100,
      safetyRating: 96,
      qualityRating: 94,
      issues: 2,
      safetyIncidents: 0,
      lastInspection: '2025-03-15',
      nextInspection: 'N/A'
    },
    {
      id: 4,
      name: 'Retail Center Renovation - Site D',
      project: 'Retail Center Renovation',
      location: 'Shopping District, Los Angeles',
      status: 'ON_HOLD',
      supervisor: 'Emily Rodriguez',
      crewSize: 8,
      startDate: '2025-01-20',
      endDate: '2025-06-15',
      progress: 30,
      safetyRating: 89,
      qualityRating: 85,
      issues: 5,
      safetyIncidents: 1,
      lastInspection: '2025-03-14',
      nextInspection: '2025-04-05'
    },
    {
      id: 5,
      name: 'Mixed-Use Development - Site E',
      project: 'Mixed-Use Development',
      location: 'City Center, San Francisco',
      status: 'PLANNING',
      supervisor: 'David Wilson',
      crewSize: 15,
      startDate: '2025-04-01',
      endDate: '2025-12-15',
      progress: 15,
      safetyRating: 0,
      qualityRating: 0,
      issues: 0,
      safetyIncidents: 0,
      lastInspection: 'N/A',
      nextInspection: '2025-04-30'
    }
  ])
  const [filter, setFilter] = useState('all')
  const [sortBy, setSortBy] = useState('progress')
  const [timeRange, setTimeRange] = useState('30d')
  const [selectedSite, setSelectedSite] = useState<any>(null)
  const [showSiteModal, setShowSiteModal] = useState(false)

  const router = useRouter()

  const handleLogout = () => {
    localStorage.removeItem('token')
    setIsLoggedIn(false)
    setUser(null)
    router.push('/login')
  }

  const filteredSites = sites.filter(site => {
    if (filter === 'all') return true
    if (filter === 'active') return site.status === 'ACTIVE'
    if (filter === 'completed') return site.status === 'COMPLETED'
    if (filter === 'onhold') return site.status === 'ON_HOLD'
    if (filter === 'planning') return site.status === 'PLANNING'
    return true
  })

  const sortedSites = [...filteredSites].sort((a, b) => {
    if (sortBy === 'progress') return b.progress - a.progress
    if (sortBy === 'safety') return b.safetyRating - a.safetyRating
    if (sortBy === 'quality') return b.qualityRating - a.qualityRating
    if (sortBy === 'startDate') return new Date(a.startDate).getTime() - new Date(b.startDate).getTime()
    if (sortBy === 'endDate') return new Date(a.endDate).getTime() - new Date(b.endDate).getTime()
    if (sortBy === 'issues') return b.issues - a.issues
    if (sortBy === 'incidents') return b.safetyIncidents - a.safetyIncidents
    return 0
  })

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'ACTIVE':
        return 'bg-emerald-100 text-emerald-800'
      case 'COMPLETED':
        return 'bg-indigo-100 text-indigo-800'
      case 'ON_HOLD':
        return 'bg-rose-100 text-rose-800'
      case 'PLANNING':
        return 'bg-blue-100 text-blue-800'
      default:
        return 'bg-gray-100 text-gray-800'
    }
  }

  const openSiteModal = (site: any) => {
    setSelectedSite(site)
    setShowSiteModal(true)
  }

  const closeSiteModal = () => {
    setShowSiteModal(false)
    setSelectedSite(null)
  }

  if (!isLoggedIn) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 flex items-center justify-center p-4">
        <div className="bg-white p-6 rounded-2xl shadow-xl w-full max-w-sm">
          <h1 className="text-2xl font-bold mb-6 text-center text-slate-800">Construction Management Login</h1>
          <form onSubmit={(e) => {
            e.preventDefault()
            // Mock login for prototype - in a real app, this would call the API
            localStorage.setItem('token', 'mock-jwt-token')
            setUser({ name: 'Site Manager', role: 'ADMIN' } as any)
            setIsLoggedIn(true)
            // Redirect to dashboard after login
            router.push('/sites')
          }}>
            <div className="mb-4">
              <label htmlFor="email" className="block text-slate-700 mb-2">Email</label>
              <input
                type="email"
                id="email"
                className="w-full px-4 py-3 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-500 transition input text-slate-800 bg-white"
                placeholder="Enter your email"
                defaultValue="admin@buildmate.com"
              />
            </div>
            <div className="mb-6">
              <label htmlFor="password" className="block text-slate-700 mb-2">Password</label>
              <input
                type="password"
                id="password"
                className="w-full px-4 py-3 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-500 transition input text-slate-800 bg-white"
                placeholder="Enter your password"
                defaultValue="password123"
              />
            </div>
            <button
              type="submit"
              className="w-full bg-teal-600 text-white py-3 px-4 rounded-lg hover:bg-teal-700 transition duration-300 shadow-md hover:shadow-lg btn btn-primary"
            >
              Login
            </button>
          </form>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100">
      
      <UserLayout user={user} onLogout={handleLogout}>
        <main className="max-w-7xl mx-auto px-4 py-6 sm:px-6 lg:px-8">
        {/* Page Header */}
        <div className="mb-8">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between">
            <div>
              <h1 className="text-3xl font-bold text-slate-800">Sites Dashboard</h1>
              <p className="text-slate-600">Manage and track all your construction sites</p>
            </div>
            <div className="mt-4 md:mt-0 flex space-x-3">
              <select 
                className="border border-slate-300 rounded-lg px-3 py-2 text-sm"
                value={timeRange}
                onChange={(e) => setTimeRange(e.target.value)}
              >
                <option value="7d">Last 7 days</option>
                <option value="30d">Last 30 days</option>
                <option value="90d">Last 90 days</option>
                <option value="1y">Last year</option>
              </select>
              <button 
                className="bg-gradient-to-r from-teal-500 to-teal-600 text-white px-4 py-2 rounded-lg font-medium hover:from-teal-600 hover:to-teal-700 transition duration-300 shadow-md flex items-center"
                onClick={() => router.push('/sites/create')}
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
                New Site
              </button>
            </div>
          </div>
        </div>

        {/* Filters and Sorting */}
        <div className="bg-white rounded-2xl shadow-md p-4 mb-6">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0">
            <div className="flex flex-wrap gap-2">
              <button 
                className={`text-xs px-3 py-1 rounded-full ${filter === 'all' ? 'bg-teal-100 text-teal-800' : 'bg-slate-100 text-slate-600'}`}
                onClick={() => setFilter('all')}
              >
                All Sites
              </button>
              <button 
                className={`text-xs px-3 py-1 rounded-full ${filter === 'active' ? 'bg-teal-100 text-teal-800' : 'bg-slate-100 text-slate-600'}`}
                onClick={() => setFilter('active')}
              >
                Active
              </button>
              <button 
                className={`text-xs px-3 py-1 rounded-full ${filter === 'completed' ? 'bg-indigo-100 text-indigo-800' : 'bg-slate-100 text-slate-600'}`}
                onClick={() => setFilter('completed')}
              >
                Completed
              </button>
              <button 
                className={`text-xs px-3 py-1 rounded-full ${filter === 'onhold' ? 'bg-rose-100 text-rose-800' : 'bg-slate-100 text-slate-600'}`}
                onClick={() => setFilter('onhold')}
              >
                On Hold
              </button>
              <button 
                className={`text-xs px-3 py-1 rounded-full ${filter === 'planning' ? 'bg-blue-100 text-blue-800' : 'bg-slate-100 text-slate-600'}`}
                onClick={() => setFilter('planning')}
              >
                Planning
              </button>
            </div>
            
            <div className="flex space-x-2">
              <select 
                className="text-sm px-3 py-1 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-500 bg-white"
                value={sortBy}
                onChange={(e) => setSortBy(e.target.value)}
              >
                <option value="progress">Sort by Progress</option>
                <option value="safety">Sort by Safety</option>
                <option value="quality">Sort by Quality</option>
                <option value="startDate">Sort by Start Date</option>
                <option value="endDate">Sort by End Date</option>
                <option value="issues">Sort by Issues</option>
                <option value="incidents">Sort by Incidents</option>
              </select>
            </div>
          </div>
        </div>

        {/* Sites Table */}
        <div className="bg-white rounded-2xl shadow-md overflow-hidden">
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-slate-200">
              <thead className="bg-slate-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Site</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Project</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Location</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Status</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Supervisor</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Crew Size</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Progress</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Dates</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Safety</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Quality</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Issues</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Incidents</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Last Inspection</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Next Inspection</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-slate-200">
                {sortedSites.map((site) => (
                  <tr 
                    key={site.id} 
                    className="hover:bg-slate-50 transition cursor-pointer"
                    onClick={() => openSiteModal(site)}
                  >
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-slate-900">{site.name}</div>
                      <div className="text-sm text-slate-500">{site.type}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-slate-900">{site.project}</div>
                      <div className="text-sm text-slate-500">{site.industry}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {site.location}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 py-1 text-xs rounded-full ${getStatusColor(site.status)}`}>
                        {site.status.replace('_', ' ')}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {site.supervisor}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {site.crewSize}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <div className="text-sm font-medium text-slate-900">{site.progress}%</div>
                        <div className="ml-2 w-16 bg-slate-200 rounded-full h-2">
                          <div 
                            className="bg-gradient-to-r from-teal-500 to-teal-600 h-2 rounded-full" 
                            style={{ width: `${site.progress}%` }}
                          ></div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      <div>{new Date(site.startDate).toLocaleDateString()}</div>
                      <div>{new Date(site.endDate).toLocaleDateString()}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {site.safetyRating > 0 ? `${site.safetyRating}%` : 'N/A'}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {site.qualityRating > 0 ? `${site.qualityRating}%` : 'N/A'}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {site.issues}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {site.safetyIncidents}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {site.lastInspection}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {site.nextInspection}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* Site Details Modal */}
        {showSiteModal && selectedSite && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-2xl shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto">
              <div className="px-6 py-4 border-b border-slate-200 flex justify-between items-center sticky top-0 bg-white">
                <h3 className="text-lg font-semibold text-slate-800">{selectedSite.name}</h3>
                <button 
                  onClick={closeSiteModal}
                  className="text-slate-400 hover:text-slate-500"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
              <div className="p-6">
                <div className="mb-6">
                  <h4 className="text-md font-medium text-slate-800 mb-3">Site Overview</h4>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm text-slate-600">Project</p>
                      <p className="font-medium text-slate-800">{selectedSite.project}</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Supervisor</p>
                      <p className="font-medium text-slate-800">{selectedSite.supervisor}</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Location</p>
                      <p className="font-medium text-slate-800">{selectedSite.location}</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Crew Size</p>
                      <p className="font-medium text-slate-800">{selectedSite.crewSize} members</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Status</p>
                      <span className={`px-2 py-1 text-xs rounded-full ${getStatusColor(selectedSite.status)}`}>
                        {selectedSite.status.replace('_', ' ')}
                      </span>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Progress</p>
                      <div className="flex items-center">
                        <div className="w-32 bg-slate-200 rounded-full h-2 mr-2">
                          <div 
                            className="bg-gradient-to-r from-teal-500 to-teal-600 h-2 rounded-full" 
                            style={{ width: `${selectedSite.progress}%` }}
                          ></div>
                        </div>
                        <span className="text-sm font-medium text-slate-800">{selectedSite.progress}%</span>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div className="mb-6">
                  <h4 className="text-md font-medium text-slate-800 mb-3">Ratings</h4>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm text-slate-600">Safety Rating</p>
                      <p className="font-medium text-slate-800">{selectedSite.safetyRating > 0 ? `${selectedSite.safetyRating}%` : 'Not Available'}</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Quality Rating</p>
                      <p className="font-medium text-slate-800">{selectedSite.qualityRating > 0 ? `${selectedSite.qualityRating}%` : 'Not Available'}</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Open Issues</p>
                      <p className="font-medium text-slate-800">{selectedSite.issues}</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Safety Incidents</p>
                      <p className="font-medium text-slate-800">{selectedSite.safetyIncidents}</p>
                    </div>
                  </div>
                </div>
                
                <div className="mb-6">
                  <h4 className="text-md font-medium text-slate-800 mb-3">Timeline</h4>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <p className="text-sm text-slate-600">Start Date</p>
                      <p className="font-medium text-slate-800">{new Date(selectedSite.startDate).toLocaleDateString()}</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">End Date</p>
                      <p className="font-medium text-slate-800">{new Date(selectedSite.endDate).toLocaleDateString()}</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Last Inspection</p>
                      <p className="font-medium text-slate-800">{selectedSite.lastInspection}</p>
                    </div>
                    <div>
                      <p className="text-sm text-slate-600">Next Inspection</p>
                      <p className="font-medium text-slate-800">{selectedSite.nextInspection}</p>
                    </div>
                  </div>
                </div>
                
                <div className="flex space-x-3">
                  <button 
                    className="flex-1 bg-gradient-to-r from-teal-500 to-teal-600 text-white py-2 px-4 rounded-lg font-medium hover:from-teal-600 hover:to-teal-700 transition duration-300"
                    onClick={() => router.push(`/sites/${selectedSite.id}`)}
                  >
                    View Details
                  </button>
                  <button 
                    className="flex-1 border border-slate-300 text-slate-700 py-2 px-4 rounded-lg font-medium hover:bg-slate-50 transition duration-300"
                    onClick={closeSiteModal}
                  >
                    Close
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </main>
      </UserLayout>
    </div>
  )
}