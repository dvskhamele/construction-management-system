
"use client";
import { useState, useEffect } from "react";
import Head from "next/head";

const RoomAreaCalculator = () => {
  const [length, setLength] = useState("");
  const [width, setWidth] = useState("");
  const [height, setHeight] = useState("");
  const [floorArea, setFloorArea] = useState(null);
  const [wallArea, setWallArea] = useState(null);
  const [email, setEmail] = useState("");
  const [isSubmitted, setIsSubmitted] = useState(false);

  const calculateAreas = () => {
    const roomLength = parseFloat(length);
    const roomWidth = parseFloat(width);
    const roomHeight = parseFloat(height);

    if (roomLength > 0 && roomWidth > 0 && roomHeight > 0) {
      const calculatedFloorArea = roomLength * roomWidth;
      const calculatedWallArea = 2 * (roomLength + roomWidth) * roomHeight;

      setFloorArea(calculatedFloorArea.toFixed(2));
      setWallArea(calculatedWallArea.toFixed(2));
      localStorage.setItem("roomAreaCalculator", JSON.stringify({ length, width, height, floorArea: calculatedFloorArea.toFixed(2), wallArea: calculatedWallArea.toFixed(2) }));
      logAnalyticsEvent("Room_Area_Estimation", { roomLength, roomWidth, roomHeight });
    }
  };

  const handleEmailSubmit = (e) => {
    e.preventDefault();
    if (email) {
      console.log("Lead captured:", email);
      saveLead(email);
      setIsSubmitted(true);
      setEmail("");
    }
  };

  const saveLead = (leadEmail) => {
    const existingLeads = JSON.parse(localStorage.getItem("room_area_leads")) || [];
    const newLeads = [...existingLeads, { email: leadEmail, timestamp: new Date().toISOString() }];
    localStorage.setItem("room_area_leads", JSON.stringify(newLeads));
  };

  const logAnalyticsEvent = (eventName: string, eventData: any) => {
    const existingEvents = JSON.parse(localStorage.getItem("analytics_events")) || [];
    const newEvent = { name: eventName, data: eventData, timestamp: new Date().toISOString() };
    const newEvents = [...existingEvents, newEvent];
    localStorage.setItem("analytics_events", JSON.stringify(newEvents));
  };

  useEffect(() => {
    const savedData = JSON.parse(localStorage.getItem("roomAreaCalculator"));
    if (savedData) {
      setLength(savedData.length);
      setWidth(savedData.width);
      setHeight(savedData.height);
      setFloorArea(savedData.floorArea);
      setWallArea(savedData.wallArea);
    }
  }, []);

  return (
    <>
      <Head>
        <title>Room Area Calculator | BuildMate</title>
        <meta name="description" content="Estimate the floor area and wall area of any room with our free online calculator. Essential for painting, flooring, and plastering estimations."/>
        <meta property="og:title" content="Room Area Calculator | BuildMate" />
        <meta property="og:description" content="A free tool for Indian contractors to accurately estimate room floor and wall areas." />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://constructioncrm.vercel.app/tools/room-area-calculator" />
        <meta property="og:image" content="https://constructioncrm.vercel.app/og-image-room-area-calculator.png" />
      </Head>
      <div className="min-h-screen bg-gray-50 flex flex-col items-center justify-center p-4">
        <div className="max-w-2xl w-full bg-white p-8 rounded-lg shadow-md">
          <h1 className="text-3xl font-bold text-center text-gray-800 mb-4">Room Area Calculator</h1>
          <p className="text-center text-gray-600 mb-8">Estimate the floor area and wall area of any room.</p>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="form-group">
              <label htmlFor="length" className="block text-sm font-medium text-gray-700 mb-1">Length (meters)</label>
              <input type="number" id="length" value={length} onChange={(e) => setLength(e.target.value)} placeholder="e.g., 5" className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"/>
            </div>
            <div className="form-group">
              <label htmlFor="width" className="block text-sm font-medium text-gray-700 mb-1">Width (meters)</label>
              <input type="number" id="width" value={width} onChange={(e) => setWidth(e.target.value)} placeholder="e.g., 4" className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"/>
            </div>
            <div className="form-group">
              <label htmlFor="height" className="block text-sm font-medium text-gray-700 mb-1">Height (meters)</label>
              <input type="number" id="height" value={height} onChange={(e) => setHeight(e.target.value)} placeholder="e.g., 3" className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"/>
            </div>
          </div>

          <div className="text-center mt-8">
            <button onClick={calculateAreas} className="w-full md:w-auto bg-blue-600 text-white font-bold py-3 px-6 rounded-md hover:bg-blue-700 transition-colors">Calculate</button>
          </div>

          {floorArea && wallArea && (
            <div className="mt-8 p-6 bg-blue-50 border border-blue-200 rounded-lg">
              <h2 className="text-2xl font-semibold text-gray-800 text-center">Estimated Areas</h2>
              <div className="mt-4 grid grid-cols-1 sm:grid-cols-2 gap-4 text-center">
                  <div className="p-4 bg-white rounded-md shadow-sm">
                      <p className="text-sm text-gray-500">Floor Area (sq. m)</p>
                      <p className="text-2xl font-bold text-blue-600">{floorArea}</p>
                  </div>
                  <div className="p-4 bg-white rounded-md shadow-sm">
                      <p className="text-sm text-gray-500">Wall Area (sq. m)</p>
                      <p className="text-2xl font-bold text-blue-600">{wallArea}</p>
                  </div>
              </div>
            </div>
          )}

          <div className="mt-10 text-center">
            <h3 className="text-xl font-semibold text-gray-800 mb-4">Get More Tools & Insights</h3>
            <p className="text-gray-600 mb-6">Join our newsletter for more free tools, industry news, and tips for construction professionals in India.</p>
            {isSubmitted ? (
              <p className="text-green-600 font-semibold">Thank you for subscribing!</p>
            ) : (
              <form onSubmit={handleEmailSubmit} className="flex flex-col md:flex-row justify-center items-center gap-4">
                <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Enter your email" required className="w-full md:w-80 px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"/>
                <button type="submit" className="w-full md:w-auto bg-green-600 text-white font-bold py-2 px-6 rounded-md hover:bg-green-700 transition-colors">Subscribe</button>
              </form>
            )}
          </div>
        </div>
      </div>
    </>
  );
};

export default RoomAreaCalculator;
