'use client';
import React, { useState } from 'react';
import { useRouter } from 'next/navigation';

export default function SoilCalculator() {
  const router = useRouter();
  const [formData, setFormData] = useState({
    soilType: 'Dense Sand',
    foundationDepth: '1.5',
    foundationWidth: '2',
    unitWeightOfSoil: '18',
    cohesion: '0',
    angleInternalFriction: '35',
  });

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const query = new URLSearchParams(formData).toString();
    router.push(`/tools/soil-bearing-capacity-calculator/result?${query}`);
  };

  return (
    <main className="bg-slate-50 py-12 sm:py-20">
      <div className="max-w-4xl mx-auto px-4">
        <div className="text-center mb-12">
          <h1 className="text-4xl tracking-tight font-extrabold text-slate-900 sm:text-5xl">
            Soil Bearing Capacity Calculator
          </h1>
          <p className="mt-4 max-w-2xl mx-auto text-xl text-slate-600">
            Estimate the safe bearing capacity of soil for shallow foundations using Terzaghi's equation.
          </p>
        </div>

        <div className="max-w-2xl mx-auto bg-white rounded-2xl shadow-xl p-8">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label htmlFor="soilType" className="block text-sm font-medium text-slate-700">Soil Type</label>
              <select name="soilType" value={formData.soilType} onChange={handleInputChange} className="mt-1 block w-full px-3 py-2 border border-slate-300 bg-white rounded-md">
                <option>Loose Sand</option>
                <option>Dense Sand</option>
                <option>Soft Clay</option>
                <option>Stiff Clay</option>
              </select>
            </div>
            <div className="grid grid-cols-2 gap-4">
                <div>
                    <label htmlFor="foundationDepth" className="block text-sm font-medium text-slate-700">Foundation Depth (m)</label>
                    <input type="number" name="foundationDepth" value={formData.foundationDepth} onChange={handleInputChange} className="mt-1 block w-full px-3 py-2 border border-slate-300 rounded-md" />
                </div>
                <div>
                    <label htmlFor="foundationWidth" className="block text-sm font-medium text-slate-700">Foundation Width (m)</label>
                    <input type="number" name="foundationWidth" value={formData.foundationWidth} onChange={handleInputChange} className="mt-1 block w-full px-3 py-2 border border-slate-300 rounded-md" />
                </div>
            </div>
            <div>
                <label htmlFor="unitWeightOfSoil" className="block text-sm font-medium text-slate-700">Unit Weight of Soil (kN/m³)</label>
                <input type="number" name="unitWeightOfSoil" value={formData.unitWeightOfSoil} onChange={handleInputChange} className="mt-1 block w-full px-3 py-2 border border-slate-300 rounded-md" />
            </div>
            {formData.soilType.includes('Clay') ? (
                 <div>
                    <label htmlFor="cohesion" className="block text-sm font-medium text-slate-700">Cohesion (c) in kN/m²</label>
                    <input type="number" name="cohesion" value={formData.cohesion} onChange={handleInputChange} className="mt-1 block w-full px-3 py-2 border border-slate-300 rounded-md" />
                </div>
            ) : (
                <div>
                    <label htmlFor="angleInternalFriction" className="block text-sm font-medium text-slate-700">Angle of Internal Friction (φ) in degrees</label>
                    <input type="number" name="angleInternalFriction" value={formData.angleInternalFriction} onChange={handleInputChange} className="mt-1 block w-full px-3 py-2 border border-slate-300 rounded-md" />
                </div>
            )}
            <div className="pt-6">
              <button type="submit" className="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-lg font-medium text-white bg-teal-600 hover:bg-teal-700">
                Calculate Bearing Capacity
              </button>
            </div>
          </form>
        </div>
      </div>
    </main>
  );
}
