
"use client";
import { useState, useEffect } from "react";
import Head from "next/head";

const SteelBarWeightCalculator = () => {
  const [diameter, setDiameter] = useState("8"); // Default 8mm
  const [length, setLength] = useState("12"); // Default 12 meters
  const [quantity, setQuantity] = useState("1");
  const [totalWeight, setTotalWeight] = useState(null);
  const [email, setEmail] = useState("");
  const [isSubmitted, setIsSubmitted] = useState(false);

  const calculateWeight = () => {
    const barDiameter = parseFloat(diameter);
    const barLength = parseFloat(length);
    const barQuantity = parseFloat(quantity);

    if (barDiameter > 0 && barLength > 0 && barQuantity > 0) {
      // Formula for steel bar weight: (D^2 / 162) * L * Q
      // D = diameter in mm, L = length in meters, Q = quantity
      const weightPerMeter = (barDiameter * barDiameter) / 162;
      const totalCalculatedWeight = weightPerMeter * barLength * barQuantity;
      setTotalWeight(totalCalculatedWeight.toFixed(2));
      localStorage.setItem("steelBarWeightCalculator", JSON.stringify({ diameter, length, quantity, totalWeight: totalCalculatedWeight.toFixed(2) }));
      logAnalyticsEvent("Steel_Bar_Weight_Estimation", { barDiameter, barLength, barQuantity });
    }
  };

  const handleEmailSubmit = (e) => {
    e.preventDefault();
    if (email) {
      console.log("Lead captured:", email);
      saveLead(email);
      setIsSubmitted(true);
      setEmail("");
    }
  };

  const saveLead = (leadEmail) => {
    const existingLeads = JSON.parse(localStorage.getItem("steel_bar_leads")) || [];
    const newLeads = [...existingLeads, { email: leadEmail, timestamp: new Date().toISOString() }];
    localStorage.setItem("steel_bar_leads", JSON.stringify(newLeads));
  };

  const logAnalyticsEvent = (eventName: string, eventData: any) => {
    const existingEvents = JSON.parse(localStorage.getItem("analytics_events")) || [];
    const newEvent = { name: eventName, data: eventData, timestamp: new Date().toISOString() };
    const newEvents = [...existingEvents, newEvent];
    localStorage.setItem("analytics_events", JSON.stringify(newEvents));
  };

  useEffect(() => {
    const savedData = JSON.parse(localStorage.getItem("steelBarWeightCalculator"));
    if (savedData) {
      setDiameter(savedData.diameter);
      setLength(savedData.length);
      setQuantity(savedData.quantity);
      setTotalWeight(savedData.totalWeight);
    }
  }, []);

  return (
    <>
      <Head>
        <title>Steel Bar Weight Calculator | BuildMate</title>
        <meta name="description" content="Estimate the weight of steel bars for various diameters, lengths, and quantities with our free online calculator. Essential for reinforced concrete construction."/>
        <meta property="og:title" content="Steel Bar Weight Calculator | BuildMate" />
        <meta property="og:description" content="A free tool for Indian contractors to accurately estimate steel bar weight." />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://constructioncrm.vercel.app/tools/steel-bar-weight-calculator" />
        <meta property="og:image" content="https://constructioncrm.vercel.app/og-image-steel-bar-calculator.png" />
      </Head>
      <div className="min-h-screen bg-gray-50 flex flex-col items-center justify-center p-4">
        <div className="max-w-2xl w-full bg-white p-8 rounded-lg shadow-md">
          <h1 className="text-3xl font-bold text-center text-gray-800 mb-4">Steel Bar Weight Calculator</h1>
          <p className="text-center text-gray-600 mb-8">Estimate the weight of steel bars for your reinforced concrete projects.</p>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="form-group">
              <label htmlFor="diameter" className="block text-sm font-medium text-gray-700 mb-1">Bar Diameter (mm)</label>
              <input type="number" id="diameter" value={diameter} onChange={(e) => setDiameter(e.target.value)} placeholder="e.g., 8" className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"/>
            </div>
            <div className="form-group">
              <label htmlFor="length" className="block text-sm font-medium text-gray-700 mb-1">Bar Length (meters)</label>
              <input type="number" id="length" value={length} onChange={(e) => setLength(e.target.value)} placeholder="e.g., 12" className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"/>
            </div>
            <div className="form-group">
              <label htmlFor="quantity" className="block text-sm font-medium text-gray-700 mb-1">Quantity of Bars</label>
              <input type="number" id="quantity" value={quantity} onChange={(e) => setQuantity(e.target.value)} placeholder="e.g., 10" className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"/>
            </div>
          </div>

          <div className="text-center mt-8">
            <button onClick={calculateWeight} className="w-full md:w-auto bg-blue-600 text-white font-bold py-3 px-6 rounded-md hover:bg-blue-700 transition-colors">Calculate</button>
          </div>

          {totalWeight && (
            <div className="mt-8 p-6 bg-blue-50 border border-blue-200 rounded-lg text-center">
              <h2 className="text-2xl font-semibold text-gray-800">Estimated Total Weight</h2>
              <p className="text-4xl font-bold text-blue-600 mt-4">{totalWeight} kg</p>
            </div>
          )}

          <div className="mt-10 text-center">
            <h3 className="text-xl font-semibold text-gray-800 mb-4">Get More Tools & Insights</h3>
            <p className="text-gray-600 mb-6">Join our newsletter for more free tools, industry news, and tips for construction professionals in India.</p>
            {isSubmitted ? (
              <p className="text-green-600 font-semibold">Thank you for subscribing!</p>
            ) : (
              <form onSubmit={handleEmailSubmit} className="flex flex-col md:flex-row justify-center items-center gap-4">
                <input type="email" value={email} onChange={(e) => setEmail(e.target.value)} placeholder="Enter your email" required className="w-full md:w-80 px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"/>
                <button type="submit" className="w-full md:w-auto bg-green-600 text-white font-bold py-2 px-6 rounded-md hover:bg-green-700 transition-colors">Subscribe</button>
              </form>
            )}
          </div>
        </div>
      </div>
    </>
  );
};

export default SteelBarWeightCalculator;
