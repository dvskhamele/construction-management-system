'use client';
import React, { useState } from 'react';
import { useRouter } from 'next/navigation';

export default function CountdownGenerator() {
  const router = useRouter();
  const [formData, setFormData] = useState({
    projectName: 'Phase 1 Handover',
    deadlineDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // Default to 30 days from now
    deadlineTime: '17:00',
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    const query = new URLSearchParams(formData).toString();
    router.push(`/tools/project-deadline-countdown/result?${query}`);
  };

  return (
    <main className="bg-slate-50 py-12 sm:py-20">
      <div className="max-w-4xl mx-auto px-4">
        <div className="text-center mb-12">
          <h1 className="text-4xl tracking-tight font-extrabold text-slate-900 sm:text-5xl">
            Project Deadline Countdown
          </h1>
          <p className="mt-4 max-w-2xl mx-auto text-xl text-slate-600">
            Create a shareable countdown timer for your project milestones and deadlines.
          </p>
        </div>

        <div className="max-w-lg mx-auto bg-white rounded-2xl shadow-xl p-8">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label htmlFor="projectName" className="block text-sm font-medium text-slate-700">Project / Milestone Name</label>
              <input type="text" name="projectName" value={formData.projectName} onChange={(e) => setFormData({...formData, projectName: e.target.value})} className="mt-1 block w-full px-3 py-2 border border-slate-300 rounded-md" />
            </div>
            <div className="grid grid-cols-2 gap-4">
                <div>
                    <label htmlFor="deadlineDate" className="block text-sm font-medium text-slate-700">Deadline Date</label>
                    <input type="date" name="deadlineDate" value={formData.deadlineDate} onChange={(e) => setFormData({...formData, deadlineDate: e.target.value})} className="mt-1 block w-full px-3 py-2 border border-slate-300 rounded-md" />
                </div>
                <div>
                    <label htmlFor="deadlineTime" className="block text-sm font-medium text-slate-700">Deadline Time</label>
                    <input type="time" name="deadlineTime" value={formData.deadlineTime} onChange={(e) => setFormData({...formData, deadlineTime: e.target.value})} className="mt-1 block w-full px-3 py-2 border border-slate-300 rounded-md" />
                </div>
            </div>
            <div className="pt-6">
              <button type="submit" className="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-lg font-medium text-white bg-teal-600 hover:bg-teal-700">
                Create Countdown
              </button>
            </div>
          </form>
        </div>
      </div>
    </main>
  );
}
