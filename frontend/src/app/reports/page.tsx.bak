'use client'

import React, { useState } from 'react'
import Link from 'next/link'
import { useRouter } from 'next/navigation'
import { usePathname } from 'next/navigation'
import UserLayout from '../../components/UserLayout'

export default function Reports() {
  const [isLoggedIn, setIsLoggedIn] = useState(true)
  const [user, setUser] = useState<any>({ name: 'Team Manager', role: 'ADMIN' })
  const [teamMembers, setTeamMembers] = useState<any[]>([
    {
      id: 1,
      name: 'Alice Johnson',
      department: 'Foundation',
      performance: 96,
      tasksCompleted: 42,
      avgCompletionTime: 18,
      badges: ['Speed Demon', 'Perfect Score']
    },
    {
      id: 2,
      name: 'Bob Smith',
      department: 'Framing',
      performance: 92,
      tasksCompleted: 38,
      avgCompletionTime: 25,
      badges: ['Problem Solver']
    },
    {
      id: 3,
      name: 'Carol Davis',
      department: 'Electrical',
      performance: 94,
      tasksCompleted: 45,
      avgCompletionTime: 15,
      badges: ['Early Bird', 'Team Player']
    },
    {
      id: 4,
      name: 'David Wilson',
      department: 'Plumbing',
      performance: 89,
      tasksCompleted: 35,
      avgCompletionTime: 22,
      badges: ['Customer Favorite']
    },
    {
      id: 5,
      name: 'Eva Brown',
      department: 'Safety',
      performance: 91,
      tasksCompleted: 32,
      avgCompletionTime: 28,
      badges: ['Attention to Detail']
    }
  ])
  const [analytics, setAnalytics] = useState({
    totalTeamMembers: 42,
    activeMembers: 37,
    inactiveMembers: 5,
    highPerformers: 12,
    teamLeaders: 8,
    newMembers: 3,
    turnoverRate: 8,
    teamProductivity: 87,
    avgPerformance: 89
  })
  const [filter, setFilter] = useState('all')
  const [timeRange, setTimeRange] = useState('30d')
  const [selectedMember, setSelectedMember] = useState<any>(null)
  const [showMemberModal, setShowMemberModal] = useState(false)
  const [showReportModal, setShowReportModal] = useState(false)
  const [selectedReport, setSelectedReport] = useState<any>(null)

  const router = useRouter()

  const handleLogout = () => {
    localStorage.removeItem('token')
    setIsLoggedIn(false)
    setUser(null)
    router.push('/login')
  }

  const getDepartmentColor = (department: string) => {
    switch (department) {
      case 'Foundation':
        return 'bg-blue-100 text-blue-800'
      case 'Framing':
        return 'bg-amber-100 text-amber-800'
      case 'Electrical':
        return 'bg-emerald-100 text-emerald-800'
      case 'Plumbing':
        return 'bg-rose-100 text-rose-800'
      case 'Safety':
        return 'bg-indigo-100 text-indigo-800'
      case 'Project Management':
        return 'bg-purple-100 text-purple-800'
      default:
        return 'bg-gray-100 text-gray-800'
    }
  }

  const getPerformanceColor = (performance: number) => {
    if (performance >= 90) return 'bg-emerald-100 text-emerald-800'
    if (performance >= 80) return 'bg-teal-100 text-teal-800'
    if (performance >= 70) return 'bg-amber-100 text-amber-800'
    return 'bg-rose-100 text-rose-800'
  }

  const getBadgeColor = (badge: string) => {
    switch (badge) {
      case 'Speed Demon':
        return 'bg-rose-100 text-rose-800'
      case 'Perfect Score':
        return 'bg-emerald-100 text-emerald-800'
      case 'Problem Solver':
        return 'bg-blue-100 text-blue-800'
      case 'Early Bird':
        return 'bg-amber-100 text-amber-800'
      case 'Team Player':
        return 'bg-indigo-100 text-indigo-800'
      case 'Customer Favorite':
        return 'bg-purple-100 text-purple-800'
      case 'Attention to Detail':
        return 'bg-teal-100 text-teal-800'
      default:
        return 'bg-gray-100 text-gray-800'
    }
  }

  const filteredTeam = teamMembers.filter(member => {
    if (filter === 'all') return true
    if (filter === 'active') return member.performance > 80
    if (filter === 'high') return member.performance >= 90
    if (filter === 'department') return member.department === filter
    return true
  })

  const sortedTeam = [...filteredTeam].sort((a, b) => b.performance - a.performance)

  const departments = Array.from(new Set(teamMembers.map(member => member.department)))

  const openMemberModal = (member: any) => {
    setSelectedMember(member)
    setShowMemberModal(true)
  }

  const closeMemberModal = () => {
    setShowMemberModal(false)
    setSelectedMember(null)
  }

  // Report Modal Functions
  const openReportModal = (report: any) => {
    setSelectedReport(report)
    setShowReportModal(true)
  }

  const closeReportModal = () => {
    setShowReportModal(false)
    setSelectedReport(null)
  }

  // Helper functions for report styling
  const getCategoryColor = (category: string) => {
    const colors: Record<string, string> = {
      sales: 'bg-blue-100 text-blue-800',
      finance: 'bg-amber-100 text-amber-800',
      operations: 'bg-emerald-100 text-emerald-800',
      quality: 'bg-purple-100 text-purple-800',
      safety: 'bg-red-100 text-red-800',
      customer: 'bg-indigo-100 text-indigo-800',
      project: 'bg-teal-100 text-teal-800',
    }
    return colors[category] || 'bg-slate-100 text-slate-800'
  }

  const getReportStatusColor = (status: string) => {
    return status === 'Active' ? 'bg-emerald-100 text-emerald-800' : 'bg-slate-100 text-slate-800'
  }

  const getAccessColor = (access: string) => {
    return access === 'Public' ? 'bg-blue-100 text-blue-800' : 'bg-amber-100 text-amber-800'
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100">

      <UserLayout user={user} onLogout={handleLogout}>
        <main className="max-w-7xl mx-auto px-4 py-6 sm:px-6 lg:px-8">
        {/* Page Header */}
        <div className="mb-8">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between">
            <div>
              <h1 className="text-3xl font-bold text-slate-800">Team Leaderboard</h1>
              <p className="text-slate-600">Track and manage construction team performance</p>
            </div>
            <div className="mt-4 md:mt-0">
              <button 
                className="bg-gradient-to-r from-teal-500 to-teal-600 text-white px-4 py-2 rounded-lg font-medium hover:from-teal-600 hover:to-teal-700 transition duration-300 shadow-md flex items-center"
                onClick={() => router.push('/team/add')}
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clipRule="evenodd" />
                </svg>
                Add Team Member
              </button>
            </div>
          </div>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-2xl shadow-md hover:shadow-lg transition duration-300 p-6 border-l-4 border-gray-500 card cursor-pointer transform hover:-translate-y-1" onClick={() => setFilter('all')}>
            <div className="flex justify-between items-start">
              <div>
                <p className="text-sm font-medium text-slate-500">Total Team Members</p>
                <p className="text-3xl font-bold text-slate-800 mt-1">{analytics.totalTeamMembers}</p>
              </div>
              <div className="bg-gray-100 p-3 rounded-full">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                </svg>
              </div>
            </div>
            <div className="mt-4">
              <span className="text-xs text-slate-500">Active: {analytics.activeMembers}</span>
            </div>
          </div>

          <div className="bg-white rounded-2xl shadow-md hover:shadow-lg transition duration-300 p-6 border-l-4 border-emerald-500 card cursor-pointer transform hover:-translate-y-1" onClick={() => setFilter('high')}>
            <div className="flex justify-between items-start">
              <div>
                <p className="text-sm font-medium text-slate-500">High Performers</p>
                <p className="text-3xl font-bold text-slate-800 mt-1">{analytics.highPerformers}</p>
              </div>
              <div className="bg-emerald-100 p-3 rounded-full">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-emerald-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
            </div>
            <div className="mt-4">
              <span className="text-xs text-emerald-500">â†‘ 3 from last month</span>
            </div>
          </div>

          <div className="bg-white rounded-2xl shadow-md hover:shadow-lg transition duration-300 p-6 border-l-4 border-amber-500 card cursor-pointer transform hover:-translate-y-1" onClick={() => setFilter('active')}>
            <div className="flex justify-between items-start">
              <div>
                <p className="text-sm font-medium text-slate-500">Team Leaders</p>
                <p className="text-3xl font-bold text-slate-800 mt-1">{analytics.teamLeaders}</p>
              </div>
              <div className="bg-amber-100 p-3 rounded-full">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-amber-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
              </div>
            </div>
            <div className="mt-4">
              <span className="text-xs text-slate-500">New: {analytics.newMembers}</span>
            </div>
          </div>

          <div className="bg-white rounded-2xl shadow-md hover:shadow-lg transition duration-300 p-6 border-l-4 border-teal-500 card cursor-pointer transform hover:-translate-y-1" onClick={() => router.push('/analytics')}>
            <div className="flex justify-between items-start">
              <div>
                <p className="text-sm font-medium text-slate-500">Team Productivity</p>
                <p className="text-3xl font-bold text-slate-800 mt-1">{analytics.teamProductivity}%</p>
              </div>
              <div className="bg-teal-100 p-3 rounded-full">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-teal-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                </svg>
              </div>
            </div>
            <div className="mt-4">
              <span className="text-xs text-slate-500">Avg: {analytics.avgPerformance}%</span>
            </div>
          </div>
        </div>

        {/* Filter Controls */}
        <div className="flex flex-wrap items-center justify-between mb-6 bg-white rounded-2xl shadow-md p-4">
          <div className="flex flex-wrap space-x-2 mb-2 sm:mb-0">
            <button 
              className={`px-3 py-1 text-sm rounded-lg ${
                filter === 'all' 
                  ? 'bg-teal-100 text-teal-800 font-medium' 
                  : 'bg-slate-100 text-slate-600 hover:bg-slate-200'
              }`}
              onClick={() => setFilter('all')}
            >
              All Members
            </button>
            <button 
              className={`px-3 py-1 text-sm rounded-lg ${
                filter === 'active' 
                  ? 'bg-emerald-100 text-emerald-800 font-medium' 
                  : 'bg-slate-100 text-slate-600 hover:bg-slate-200'
              }`}
              onClick={() => setFilter('active')}
            >
              Active
            </button>
            <button 
              className={`px-3 py-1 text-sm rounded-lg ${
                filter === 'high' 
                  ? 'bg-amber-100 text-amber-800 font-medium' 
                  : 'bg-slate-100 text-slate-600 hover:bg-slate-200'
              }`}
              onClick={() => setFilter('high')}
            >
              High Performers
            </button>
            <button 
              className={`px-3 py-1 text-sm rounded-lg ${
                filter === 'department' 
                  ? 'bg-blue-100 text-blue-800 font-medium' 
                  : 'bg-slate-100 text-slate-600 hover:bg-slate-200'
              }`}
              onClick={() => setFilter('department')}
            >
              By Department
            </button>
          </div>
          <div className="flex items-center space-x-2">
            <span className="text-sm text-slate-600">Time Range:</span>
            <select 
              className="border border-slate-300 rounded-lg px-2 py-1 text-sm"
              value={timeRange}
              onChange={(e) => setTimeRange(e.target.value)}
            >
              <option value="7d">Last 7 days</option>
              <option value="30d">Last 30 days</option>
              <option value="90d">Last 90 days</option>
              <option value="1y">Last year</option>
            </select>
          </div>
        </div>

        {/* Team Leaderboard */}
        <div className="bg-white rounded-2xl shadow-md p-6 card">
          <h2 className="text-xl font-semibold text-slate-800 mb-4">
            {filter === 'all' ? 'All Team Members' : 
             filter === 'active' ? 'Active Team Members' : 
             filter === 'high' ? 'High Performing Members' : 
             filter === 'department' ? 'Department-wise Performance' : 'Team Performance'}
          </h2>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-slate-200">
              <thead className="bg-slate-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Rank</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Team Member</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Department</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Performance</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Tasks</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Avg. Time</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Badges</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-slate-200">
                {sortedTeam.map((member, index) => (
                  <tr 
                    key={member.id} 
                    className="hover:bg-slate-50 transition cursor-pointer"
                    onClick={() => openMemberModal(member)}
                  >
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        {index === 0 && (
                          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-yellow-500 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        )}
                        {index === 1 && (
                          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-400 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        )}
                        {index === 2 && (
                          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-amber-700 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        )}
                        <span className="text-sm font-medium text-slate-900">#{index + 1}</span>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <div className="flex-shrink-0 h-10 w-10 bg-gradient-to-br from-teal-400 to-teal-600 rounded-full flex items-center justify-center">
                          <span className="text-white font-medium">{member.name.charAt(0)}</span>
                        </div>
                        <div className="ml-4">
                          <div className="text-sm font-medium text-slate-900">{member.name}</div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 py-1 text-xs leading-5 font-semibold rounded-full ${getDepartmentColor(member.department)}`}>
                        {member.department}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <div className="text-sm font-medium text-slate-900">{member.performance}%</div>
                        <div className="ml-2 w-24 bg-slate-200 rounded-full h-2">
                          <div 
                            className="bg-gradient-to-r from-teal-500 to-teal-600 h-2 rounded-full"
                            style={{ width: `${member.performance}%` }}
                          ></div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {member.tasksCompleted}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className="text-sm font-medium text-slate-900">{member.avgCompletionTime} min</span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex flex-wrap gap-1">
                        {member.badges.map((badge: string, badgeIndex: number) => (
                          <span 
                            key={badgeIndex} 
                            className={`px-2 py-1 text-xs rounded-full ${getBadgeColor(badge)}`}
                          >
                            {badge}
                          </span>
                        ))}
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* Analytics Dashboard */}
        <div className="mt-8 grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Performance Trends */}
          <div className="bg-white rounded-2xl shadow-md p-6 card">
            <h2 className="text-xl font-semibold text-slate-800 mb-4">Performance Trends</h2>
            <div className="h-64 flex items-end space-x-2 mt-8">
              {[87, 92, 89, 94, 91, 96, 93].map((value, index) => (
                <div key={index} className="flex flex-col items-center flex-1 group">
                  <div className="text-xs text-slate-500 mb-1 group-hover:text-teal-600 transition-colors">
                    {value}%
                  </div>
                  <div 
                    className="w-full bg-gradient-to-t from-teal-400 to-teal-600 rounded-t transition-all duration-300 group-hover:from-teal-500 group-hover:to-teal-700"
                    style={{ height: `${(value / 100) * 200}px` }}
                  ></div>
                  <div className="text-xs text-slate-600 mt-2 group-hover:text-slate-800 transition-colors">
                    Week {index + 1}
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Department Performance */}
          <div className="bg-white rounded-2xl shadow-md p-6 card">
            <h2 className="text-xl font-semibold text-slate-800 mb-4">Department Performance</h2>
            <div className="space-y-4">
              {departments.map((dept, index) => {
                const deptMembers = teamMembers.filter(m => m.department === dept)
                const avgPerformance = deptMembers.reduce((sum, m) => sum + m.performance, 0) / deptMembers.length
                return (
                  <div key={index} className="flex items-center">
                    <div className="w-32 text-sm font-medium text-slate-800">
                      {dept}
                    </div>
                    <div className="flex-1 ml-4">
                      <div className="w-full bg-slate-200 rounded-full h-2.5">
                        <div 
                          className={`h-2.5 rounded-full ${getDepartmentColor(dept).replace('text-', 'bg-').replace('-800', '-500')}`}
                          style={{ width: `${avgPerformance}%` }}
                        ></div>
                      </div>
                    </div>
                    <div className="w-12 text-right text-sm text-slate-600">
                      {Math.round(avgPerformance)}%
                    </div>
                  </div>
                )
              })}
            </div>
          </div>
        </div>

        {/* Report Generation */}
        <div className="mt-8 bg-white rounded-2xl shadow-md p-6 card">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-xl font-semibold text-slate-800">Generate Custom Reports</h2>
            <button 
              className="text-sm text-teal-600 hover:text-teal-800 font-medium"
              onClick={() => router.push('/reports/custom')}
            >
              Create Custom Report
            </button>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div className="border border-slate-200 rounded-lg p-4 hover:shadow-md transition cursor-pointer" onClick={() => router.push('/reports/sales-pipeline')}>
              <div className="flex justify-between items-start">
                <h3 className="font-medium text-slate-800">Sales Pipeline Report</h3>
                <span className="px-2 py-1 text-xs rounded-full bg-teal-100 text-teal-800">Sales</span>
              </div>
              <p className="text-sm text-slate-600 mt-2">Analyze construction sales pipeline performance and conversion rates</p>
              <div className="mt-3 flex justify-between text-xs text-slate-500">
                <span>Last generated: 2025-03-18</span>
                <span>Format: PDF</span>
              </div>
            </div>
            
            <div className="border border-slate-200 rounded-lg p-4 hover:shadow-md transition cursor-pointer" onClick={() => router.push('/reports/project-profitability')}>
              <div className="flex justify-between items-start">
                <h3 className="font-medium text-slate-800">Project Profitability</h3>
                <span className="px-2 py-1 text-xs rounded-full bg-amber-100 text-amber-800">Finance</span>
              </div>
              <p className="text-sm text-slate-600 mt-2">Detailed analysis of profit margins and cost efficiency by project</p>
              <div className="mt-3 flex justify-between text-xs text-slate-500">
                <span>Last generated: 2025-03-17</span>
                <span>Format: Excel</span>
              </div>
            </div>
            
            <div className="border border-slate-200 rounded-lg p-4 hover:shadow-md transition cursor-pointer" onClick={() => router.push('/reports/resource-utilization')}>
              <div className="flex justify-between items-start">
                <h3 className="font-medium text-slate-800">Resource Utilization</h3>
                <span className="px-2 py-1 text-xs rounded-full bg-emerald-100 text-emerald-800">Operations</span>
              </div>
              <p className="text-sm text-slate-600 mt-2">Crew and equipment utilization across all construction sites</p>
              <div className="mt-3 flex justify-between text-xs text-slate-500">
                <span>Last generated: 2025-03-18</span>
                <span>Format: PDF</span>
              </div>
            </div>
          </div>
        </div>

        {/* Analytics Features */}
        <div className="mt-8 bg-white rounded-2xl shadow-md p-6 card">
          <h2 className="text-xl font-semibold text-slate-800 mb-4">Analytics & Reporting Features</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <div className="border border-slate-200 rounded-lg p-4 text-center hover:shadow-md transition">
              <div className="w-12 h-12 bg-gradient-to-br from-teal-100 to-teal-200 rounded-lg flex items-center justify-center mx-auto mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-teal-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                </svg>
              </div>
              <h3 className="font-medium text-slate-800 mb-2">Real-time Dashboards</h3>
              <p className="text-sm text-slate-600">Interactive dashboards with live project data and KPIs</p>
            </div>
            
            <div className="border border-slate-200 rounded-lg p-4 text-center hover:shadow-md transition">
              <div className="w-12 h-12 bg-gradient-to-br from-amber-100 to-amber-200 rounded-lg flex items-center justify-center mx-auto mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-amber-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h10a2 2 0 012 2v12a2 2 0 01-2 2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0h6" />
                </svg>
              </div>
              <h3 className="font-medium text-slate-800 mb-2">Custom Reports</h3>
              <p className="text-sm text-slate-600">Create custom reports with drag-and-drop report builder</p>
            </div>
            
            <div className="border border-slate-200 rounded-lg p-4 text-center hover:shadow-md transition">
              <div className="w-12 h-12 bg-gradient-to-br from-emerald-100 to-emerald-200 rounded-lg flex items-center justify-center mx-auto mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-emerald-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
              </div>
              <h3 className="font-medium text-slate-800 mb-2">Scheduled Reports</h3>
              <p className="text-sm text-slate-600">Automated report generation and delivery on custom schedules</p>
            </div>
            
            <div className="border border-slate-200 rounded-lg p-4 text-center hover:shadow-md transition">
              <div className="w-12 h-12 bg-gradient-to-br from-indigo-100 to-indigo-200 rounded-lg flex items-center justify-center mx-auto mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                </svg>
              </div>
              <h3 className="font-medium text-slate-800 mb-2">Advanced Analytics</h3>
              <p className="text-sm text-slate-600">Predictive analytics and machine learning for project insights</p>
            </div>
          </div>
        </div>
      </main>
      </UserLayout>

      {/* Report Details Modal */}
      {showReportModal && selectedReport && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-2xl shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto max-w-[calc(100vw-2rem)]">
            <div className="px-6 py-4 border-b border-slate-200 flex justify-between items-center sticky top-0 bg-white">
              <h3 className="text-lg font-semibold text-slate-800">{selectedReport.name}</h3>
              <button 
                onClick={closeReportModal}
                className="text-slate-400 hover:text-slate-500"
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
            <div className="p-6">
              <div className="mb-6">
                <p className="text-slate-600">{selectedReport.description}</p>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <div>
                  <h4 className="font-medium text-slate-800 mb-2">Report Details</h4>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Category:</span>
                      <span className={`px-2 py-1 text-xs rounded-full ${getCategoryColor(selectedReport.category)}`}>
                        {selectedReport.category}
                      </span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Last Generated:</span>
                      <span className="text-slate-800">{selectedReport.lastGenerated}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Frequency:</span>
                      <span className="text-slate-800">{selectedReport.frequency}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Format:</span>
                      <span className="text-slate-800">{selectedReport.format}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Status:</span>
                      <span className={`px-2 py-1 text-xs rounded-full ${getReportStatusColor(selectedReport.status)}`}>
                        {selectedReport.status}
                      </span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Access:</span>
                      <span className={`px-2 py-1 text-xs rounded-full ${getAccessColor(selectedReport.access)}`}>
                        {selectedReport.access}
                      </span>
                    </div>
                  </div>
                </div>
                
                <div>
                  <h4 className="font-medium text-slate-800 mb-2">Engagement Metrics</h4>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Total Views:</span>
                      <span className="text-slate-800">{selectedReport.views}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Total Downloads:</span>
                      <span className="text-slate-800">{selectedReport.downloads}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Avg. Time Spent:</span>
                      <span className="text-slate-800">3.2 min</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Completion Rate:</span>
                      <span className="text-slate-800">78%</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-slate-600">Feedback Score:</span>
                      <span className="text-slate-800">4.6/5</span>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="mb-6">
                <h4 className="font-medium text-slate-800 mb-2">Recent Activity</h4>
                <div className="space-y-3">
                  <div className="border-l-4 border-teal-500 pl-4 py-2">
                    <p className="text-sm text-slate-800">Report generated successfully</p>
                    <p className="text-xs text-slate-500">Today, 9:30 AM</p>
                  </div>
                  <div className="border-l-4 border-amber-500 pl-4 py-2">
                    <p className="text-sm text-slate-800">Report viewed by Sarah Johnson</p>
                    <p className="text-xs text-slate-500">Today, 10:15 AM</p>
                  </div>
                  <div className="border-l-4 border-blue-500 pl-4 py-2">
                    <p className="text-sm text-slate-800">Report downloaded by Mike Chen</p>
                    <p className="text-xs text-slate-500">Today, 11:45 AM</p>
                  </div>
                </div>
              </div>
              
              <div className="flex space-x-3">
                <button 
                  className="flex-1 bg-gradient-to-r from-teal-500 to-teal-600 text-white px-4 py-2 rounded-lg font-medium hover:from-teal-600 hover:to-teal-700 transition duration-300"
                  onClick={() => {
                    // Download report logic here
                    alert(`Downloading ${selectedReport.name}...`)
                  }}
                >
                  Download Report
                </button>
                <button 
                  className="flex-1 border border-slate-300 text-slate-700 py-2 px-4 rounded-lg font-medium hover:bg-slate-50 transition duration-300"
                  onClick={() => router.push(`/reports/${selectedReport.id}/edit`)}
                >
                  Customize Report
                </button>
                <button 
                  className="flex-1 border border-slate-300 text-slate-700 py-2 px-4 rounded-lg font-medium hover:bg-slate-50 transition duration-300"
                  onClick={closeReportModal}
                >
                  Close
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}