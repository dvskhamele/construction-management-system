'use client'

import React, { useState, useEffect } from 'react'
import UserLayout from '../../components/UserLayout'
import { useRouter } from 'next/navigation'

export default function Materials() {
  const [isLoggedIn, setIsLoggedIn] = useState(true)
  const [user, setUser] = useState<any>({ name: 'Construction Admin', role: 'ADMIN' })
  const [materials, setMaterials] = useState<any[]>([])
  const router = useRouter()

  const handleLogout = () => {
    localStorage.removeItem('token')
    setIsLoggedIn(false)
    setUser(null)
    router.push('/login')
  }

  useEffect(() => {
    // Mock data for prototype - Materials
    const mockMaterials = [
      { 
        id: 1, 
        name: 'Portland Cement 50kg', 
        category: 'Cement & Concrete', 
        supplier: 'UltraTech Cement Ltd', 
        quantity: 150, 
        unit: 'bags', 
        reorderLevel: 50, 
        costPerUnit: 350, 
        totalValue: 52500, 
        location: 'Warehouse A - Shelf 3', 
        lastOrdered: '2025-03-01', 
        expiryDate: '2025-09-01',
        status: 'In Stock'
      },
      { 
        id: 2, 
        name: 'Steel Rods 12mm', 
        category: 'Steel & Metals', 
        supplier: 'Tata Steel', 
        quantity: 2500, 
        unit: 'meters', 
        reorderLevel: 1000, 
        costPerUnit: 85, 
        totalValue: 212500, 
        location: 'Warehouse B - Rack 5', 
        lastOrdered: '2025-02-15', 
        expiryDate: '2026-02-15',
        status: 'In Stock'
      },
      { 
        id: 3, 
        name: 'Sand (River)', 
        category: 'Aggregates', 
        supplier: 'Local Sand Suppliers', 
        quantity: 50, 
        unit: 'tons', 
        reorderLevel: 20, 
        costPerUnit: 2500, 
        totalValue: 125000, 
        location: 'Outdoor Yard - Zone 2', 
        lastOrdered: '2025-03-10', 
        expiryDate: '2025-06-10',
        status: 'Low Stock'
      },
      { 
        id: 4, 
        name: 'Bricks (Standard)', 
        category: 'Masonry', 
        supplier: 'ABC Bricks Co', 
        quantity: 10000, 
        unit: 'pieces', 
        reorderLevel: 5000, 
        costPerUnit: 8, 
        totalValue: 80000, 
        location: 'Warehouse A - Pallet 7', 
        lastOrdered: '2025-02-28', 
        expiryDate: '2026-02-28',
        status: 'In Stock'
      },
      { 
        id: 5, 
        name: 'Paint (Exterior White)', 
        category: 'Finishing', 
        supplier: 'Asian Paints', 
        quantity: 50, 
        unit: 'liters', 
        reorderLevel: 20, 
        costPerUnit: 450, 
        totalValue: 22500, 
        location: 'Storage Room 3', 
        lastOrdered: '2025-01-20', 
        expiryDate: '2026-01-20',
        status: 'In Stock'
      }
    ]
    
    setMaterials(mockMaterials)
  }, [])

  if (!isLoggedIn) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 flex items-center justify-center">
        <div className="bg-white p-8 rounded-2xl shadow-xl">
          <h1 className="text-2xl font-bold mb-6 text-center text-slate-800">Please log in</h1>
          <button 
            className="bg-gradient-to-r from-teal-500 to-teal-600 text-white py-3 px-6 rounded-lg font-medium hover:from-teal-600 hover:to-teal-700 transition duration-300 shadow-md"
            onClick={() => router.push('/login')}
          >
            Go to Login
          </button>
        </div>
      </div>
    )
  }

  return (
    <UserLayout user={user} onLogout={handleLogout}>
      <main className="max-w-7xl mx-auto px-4 py-6 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="mb-8">
          <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
            <div>
              <h1 className="text-3xl font-bold text-slate-800">Materials Management</h1>
              <p className="text-slate-600">Track construction materials and inventory levels</p>
            </div>
            <button className="bg-gradient-to-r from-teal-500 to-teal-600 text-white py-2 px-4 rounded-lg font-medium hover:from-teal-600 hover:to-teal-700 transition duration-300 shadow-md flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fillRule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clipRule="evenodd" />
              </svg>
              Add Material
            </button>
          </div>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
          <div className="bg-white rounded-xl shadow p-4 text-center border-l-4 border-slate-500">
            <p className="text-2xl font-bold text-slate-800">{materials.length}</p>
            <p className="text-sm text-slate-600">Material Types</p>
          </div>
          <div className="bg-emerald-50 rounded-xl shadow p-4 text-center border-l-4 border-emerald-500">
            <p className="text-2xl font-bold text-emerald-700">
              {materials.filter(m => m.status === 'In Stock').length}
            </p>
            <p className="text-sm text-emerald-600">In Stock</p>
          </div>
          <div className="bg-amber-50 rounded-xl shadow p-4 text-center border-l-4 border-amber-500">
            <p className="text-2xl font-bold text-amber-700">
              {materials.filter(m => m.status === 'Low Stock').length}
            </p>
            <p className="text-sm text-amber-600">Low Stock</p>
          </div>
          <div className="bg-gray-50 rounded-xl shadow p-4 text-center border-l-4 border-gray-500">
            <p className="text-2xl font-bold text-gray-700">
              ₹{Math.round(materials.reduce((sum, m) => sum + m.totalValue, 0) / 1000)}K
            </p>
            <p className="text-sm text-gray-600">Total Value</p>
          </div>
        </div>

        {/* Materials List */}
        <div className="bg-white rounded-xl shadow overflow-hidden">
          <div className="px-6 py-4 border-b border-slate-200 flex justify-between items-center">
            <h2 className="text-xl font-semibold text-slate-800">Materials Inventory</h2>
            <div className="text-sm text-slate-500">
              Showing {materials.length} materials
            </div>
          </div>
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-slate-200">
              <thead className="bg-slate-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Material</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Category</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Supplier</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Quantity</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Status</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Location</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Cost</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-slate-200">
                {materials.map((material: any) => (
                  <tr key={material.id} className="hover:bg-slate-50">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-slate-900">{material.name}</div>
                      <div className="text-sm text-slate-500">Last ordered: {material.lastOrdered}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {material.category}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {material.supplier}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-slate-900">{material.quantity} {material.unit}</div>
                      <div className="text-xs text-slate-500">Min: {material.reorderLevel}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 py-1 text-xs rounded-full ${
                        material.status === 'In Stock' ? 'bg-emerald-100 text-emerald-800' :
                        material.status === 'Low Stock' ? 'bg-amber-100 text-amber-800' :
                        'bg-gray-100 text-gray-800'
                      }`}>
                        {material.status}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-600">
                      {material.location}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm font-medium text-slate-900">₹{material.costPerUnit}</div>
                      <div className="text-xs text-slate-500">Total: ₹{material.totalValue.toLocaleString()}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <button className="text-teal-600 hover:text-teal-900 mr-3">Edit</button>
                      <button className="text-rose-600 hover:text-rose-900">Order</button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </main>
    </UserLayout>
  )
}